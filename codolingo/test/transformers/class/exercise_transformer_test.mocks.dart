// Mocks generated by Mockito 5.4.4 from annotations
// in codolingo/test/transformers/class/exercise_transformer_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:codolingo/model/class/answer_element.dart' as _i2;
import 'package:codolingo/transformers/class/answer_transformer.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCodolingoAnswerElement_0 extends _i1.SmartFake
    implements _i2.CodolingoAnswerElement {
  _FakeCodolingoAnswerElement_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CodolingoAnswerElementTransformer].
///
/// See the documentation for Mockito's code generation for more information.
class MockCodolingoAnswerElementTransformer extends _i1.Mock
    implements _i3.CodolingoAnswerElementTransformer {
  MockCodolingoAnswerElementTransformer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CodolingoAnswerElement fromJson(dynamic data) => (super.noSuchMethod(
        Invocation.method(
          #fromJson,
          [data],
        ),
        returnValue: _FakeCodolingoAnswerElement_0(
          this,
          Invocation.method(
            #fromJson,
            [data],
          ),
        ),
      ) as _i2.CodolingoAnswerElement);

  @override
  List<_i2.CodolingoAnswerElement> fromListJson(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #fromListJson,
          [data],
        ),
        returnValue: <_i2.CodolingoAnswerElement>[],
      ) as List<_i2.CodolingoAnswerElement>);
}
